// source: GamePkg.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.serversdk.GamePkg', null, global);
goog.exportSymbol('proto.serversdk.HeadType', null, global);
goog.exportSymbol('proto.serversdk.HeartbeatRequest', null, global);
goog.exportSymbol('proto.serversdk.HeartbeatResponse', null, global);
goog.exportSymbol('proto.serversdk.LoginRequest', null, global);
goog.exportSymbol('proto.serversdk.LoginResponse', null, global);
goog.exportSymbol('proto.serversdk.LogoutRequest', null, global);
goog.exportSymbol('proto.serversdk.LogoutResponse', null, global);
goog.exportSymbol('proto.serversdk.Notification', null, global);
goog.exportSymbol('proto.serversdk.SendToClient', null, global);
goog.exportSymbol('proto.serversdk.SendToServer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.LoginRequest.displayName = 'proto.serversdk.LoginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.LoginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.LoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.LoginResponse.displayName = 'proto.serversdk.LoginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.LogoutRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.LogoutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.LogoutRequest.displayName = 'proto.serversdk.LogoutRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.LogoutResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.LogoutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.LogoutResponse.displayName = 'proto.serversdk.LogoutResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.Notification.displayName = 'proto.serversdk.Notification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.HeartbeatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.HeartbeatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.HeartbeatRequest.displayName = 'proto.serversdk.HeartbeatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.HeartbeatResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.HeartbeatResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.HeartbeatResponse.displayName = 'proto.serversdk.HeartbeatResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.SendToServer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.SendToServer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.SendToServer.displayName = 'proto.serversdk.SendToServer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.SendToClient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.SendToClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.SendToClient.displayName = 'proto.serversdk.SendToClient';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serversdk.GamePkg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serversdk.GamePkg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serversdk.GamePkg.displayName = 'proto.serversdk.GamePkg';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.LoginRequest}
 */
proto.serversdk.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.LoginRequest;
  return proto.serversdk.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.LoginRequest}
 */
proto.serversdk.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.LoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.LoginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.LoginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.LoginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.LoginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    msg: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.LoginResponse}
 */
proto.serversdk.LoginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.LoginResponse;
  return proto.serversdk.LoginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.LoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.LoginResponse}
 */
proto.serversdk.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.LoginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.LoginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.LoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.LoginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * required int32 code = 1;
 * @return {number}
 */
proto.serversdk.LoginResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serversdk.LoginResponse} returns this
 */
proto.serversdk.LoginResponse.prototype.setCode = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.serversdk.LoginResponse} returns this
 */
proto.serversdk.LoginResponse.prototype.clearCode = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.LoginResponse.prototype.hasCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string msg = 2;
 * @return {string}
 */
proto.serversdk.LoginResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.serversdk.LoginResponse} returns this
 */
proto.serversdk.LoginResponse.prototype.setMsg = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.serversdk.LoginResponse} returns this
 */
proto.serversdk.LoginResponse.prototype.clearMsg = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.LoginResponse.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.LogoutRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.LogoutRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.LogoutRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.LogoutRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.LogoutRequest}
 */
proto.serversdk.LogoutRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.LogoutRequest;
  return proto.serversdk.LogoutRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.LogoutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.LogoutRequest}
 */
proto.serversdk.LogoutRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.LogoutRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.LogoutRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.LogoutRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.LogoutRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.LogoutResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.LogoutResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.LogoutResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.LogoutResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.LogoutResponse}
 */
proto.serversdk.LogoutResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.LogoutResponse;
  return proto.serversdk.LogoutResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.LogoutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.LogoutResponse}
 */
proto.serversdk.LogoutResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.LogoutResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.LogoutResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.LogoutResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.LogoutResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.Notification.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.Notification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.Notification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.Notification.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.Notification}
 */
proto.serversdk.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.Notification;
  return proto.serversdk.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.Notification}
 */
proto.serversdk.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * required string msg = 1;
 * @return {string}
 */
proto.serversdk.Notification.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.serversdk.Notification} returns this
 */
proto.serversdk.Notification.prototype.setMsg = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.serversdk.Notification} returns this
 */
proto.serversdk.Notification.prototype.clearMsg = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.Notification.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.HeartbeatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.HeartbeatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.HeartbeatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.HeartbeatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.HeartbeatRequest}
 */
proto.serversdk.HeartbeatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.HeartbeatRequest;
  return proto.serversdk.HeartbeatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.HeartbeatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.HeartbeatRequest}
 */
proto.serversdk.HeartbeatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.HeartbeatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.HeartbeatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.HeartbeatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.HeartbeatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.HeartbeatResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.HeartbeatResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.HeartbeatResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.HeartbeatResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.HeartbeatResponse}
 */
proto.serversdk.HeartbeatResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.HeartbeatResponse;
  return proto.serversdk.HeartbeatResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.HeartbeatResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.HeartbeatResponse}
 */
proto.serversdk.HeartbeatResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.HeartbeatResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.HeartbeatResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.HeartbeatResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.HeartbeatResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.SendToServer.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.SendToServer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.SendToServer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.SendToServer.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.SendToServer}
 */
proto.serversdk.SendToServer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.SendToServer;
  return proto.serversdk.SendToServer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.SendToServer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.SendToServer}
 */
proto.serversdk.SendToServer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.SendToServer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.SendToServer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.SendToServer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.SendToServer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * required bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.serversdk.SendToServer.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * required bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.serversdk.SendToServer.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * required bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.serversdk.SendToServer.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.serversdk.SendToServer} returns this
 */
proto.serversdk.SendToServer.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.serversdk.SendToServer} returns this
 */
proto.serversdk.SendToServer.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.SendToServer.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.SendToClient.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.SendToClient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.SendToClient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.SendToClient.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.SendToClient}
 */
proto.serversdk.SendToClient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.SendToClient;
  return proto.serversdk.SendToClient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.SendToClient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.SendToClient}
 */
proto.serversdk.SendToClient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.SendToClient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.SendToClient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.SendToClient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.SendToClient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * required bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.serversdk.SendToClient.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * required bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.serversdk.SendToClient.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * required bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.serversdk.SendToClient.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.serversdk.SendToClient} returns this
 */
proto.serversdk.SendToClient.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.serversdk.SendToClient} returns this
 */
proto.serversdk.SendToClient.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.SendToClient.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serversdk.GamePkg.prototype.toObject = function(opt_includeInstance) {
  return proto.serversdk.GamePkg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serversdk.GamePkg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.GamePkg.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    uid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    timestamp: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    loginrequest: (f = msg.getLoginrequest()) && proto.serversdk.LoginRequest.toObject(includeInstance, f),
    loginresponse: (f = msg.getLoginresponse()) && proto.serversdk.LoginResponse.toObject(includeInstance, f),
    logoutrequest: (f = msg.getLogoutrequest()) && proto.serversdk.LogoutRequest.toObject(includeInstance, f),
    logoutresponse: (f = msg.getLogoutresponse()) && proto.serversdk.LogoutResponse.toObject(includeInstance, f),
    notification: (f = msg.getNotification()) && proto.serversdk.Notification.toObject(includeInstance, f),
    heartbeatrequest: (f = msg.getHeartbeatrequest()) && proto.serversdk.HeartbeatRequest.toObject(includeInstance, f),
    heartbeatresponse: (f = msg.getHeartbeatresponse()) && proto.serversdk.HeartbeatResponse.toObject(includeInstance, f),
    sendtoserver: (f = msg.getSendtoserver()) && proto.serversdk.SendToServer.toObject(includeInstance, f),
    sendtoclient: (f = msg.getSendtoclient()) && proto.serversdk.SendToClient.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serversdk.GamePkg}
 */
proto.serversdk.GamePkg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serversdk.GamePkg;
  return proto.serversdk.GamePkg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serversdk.GamePkg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serversdk.GamePkg}
 */
proto.serversdk.GamePkg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.serversdk.HeadType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = new proto.serversdk.LoginRequest;
      reader.readMessage(value,proto.serversdk.LoginRequest.deserializeBinaryFromReader);
      msg.setLoginrequest(value);
      break;
    case 5:
      var value = new proto.serversdk.LoginResponse;
      reader.readMessage(value,proto.serversdk.LoginResponse.deserializeBinaryFromReader);
      msg.setLoginresponse(value);
      break;
    case 6:
      var value = new proto.serversdk.LogoutRequest;
      reader.readMessage(value,proto.serversdk.LogoutRequest.deserializeBinaryFromReader);
      msg.setLogoutrequest(value);
      break;
    case 7:
      var value = new proto.serversdk.LogoutResponse;
      reader.readMessage(value,proto.serversdk.LogoutResponse.deserializeBinaryFromReader);
      msg.setLogoutresponse(value);
      break;
    case 8:
      var value = new proto.serversdk.Notification;
      reader.readMessage(value,proto.serversdk.Notification.deserializeBinaryFromReader);
      msg.setNotification(value);
      break;
    case 9:
      var value = new proto.serversdk.HeartbeatRequest;
      reader.readMessage(value,proto.serversdk.HeartbeatRequest.deserializeBinaryFromReader);
      msg.setHeartbeatrequest(value);
      break;
    case 10:
      var value = new proto.serversdk.HeartbeatResponse;
      reader.readMessage(value,proto.serversdk.HeartbeatResponse.deserializeBinaryFromReader);
      msg.setHeartbeatresponse(value);
      break;
    case 11:
      var value = new proto.serversdk.SendToServer;
      reader.readMessage(value,proto.serversdk.SendToServer.deserializeBinaryFromReader);
      msg.setSendtoserver(value);
      break;
    case 12:
      var value = new proto.serversdk.SendToClient;
      reader.readMessage(value,proto.serversdk.SendToClient.deserializeBinaryFromReader);
      msg.setSendtoclient(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serversdk.GamePkg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serversdk.GamePkg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serversdk.GamePkg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serversdk.GamePkg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.serversdk.HeadType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getLoginrequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.serversdk.LoginRequest.serializeBinaryToWriter
    );
  }
  f = message.getLoginresponse();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.serversdk.LoginResponse.serializeBinaryToWriter
    );
  }
  f = message.getLogoutrequest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.serversdk.LogoutRequest.serializeBinaryToWriter
    );
  }
  f = message.getLogoutresponse();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.serversdk.LogoutResponse.serializeBinaryToWriter
    );
  }
  f = message.getNotification();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.serversdk.Notification.serializeBinaryToWriter
    );
  }
  f = message.getHeartbeatrequest();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.serversdk.HeartbeatRequest.serializeBinaryToWriter
    );
  }
  f = message.getHeartbeatresponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.serversdk.HeartbeatResponse.serializeBinaryToWriter
    );
  }
  f = message.getSendtoserver();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.serversdk.SendToServer.serializeBinaryToWriter
    );
  }
  f = message.getSendtoclient();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.serversdk.SendToClient.serializeBinaryToWriter
    );
  }
};


/**
 * required HeadType type = 1;
 * @return {!proto.serversdk.HeadType}
 */
proto.serversdk.GamePkg.prototype.getType = function() {
  return /** @type {!proto.serversdk.HeadType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.serversdk.HeadType} value
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string uid = 2;
 * @return {string}
 */
proto.serversdk.GamePkg.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.setUid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearUid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasUid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 timestamp = 3;
 * @return {number}
 */
proto.serversdk.GamePkg.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LoginRequest loginRequest = 4;
 * @return {?proto.serversdk.LoginRequest}
 */
proto.serversdk.GamePkg.prototype.getLoginrequest = function() {
  return /** @type{?proto.serversdk.LoginRequest} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.LoginRequest, 4));
};


/**
 * @param {?proto.serversdk.LoginRequest|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setLoginrequest = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearLoginrequest = function() {
  return this.setLoginrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasLoginrequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LoginResponse loginResponse = 5;
 * @return {?proto.serversdk.LoginResponse}
 */
proto.serversdk.GamePkg.prototype.getLoginresponse = function() {
  return /** @type{?proto.serversdk.LoginResponse} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.LoginResponse, 5));
};


/**
 * @param {?proto.serversdk.LoginResponse|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setLoginresponse = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearLoginresponse = function() {
  return this.setLoginresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasLoginresponse = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional LogoutRequest logoutRequest = 6;
 * @return {?proto.serversdk.LogoutRequest}
 */
proto.serversdk.GamePkg.prototype.getLogoutrequest = function() {
  return /** @type{?proto.serversdk.LogoutRequest} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.LogoutRequest, 6));
};


/**
 * @param {?proto.serversdk.LogoutRequest|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setLogoutrequest = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearLogoutrequest = function() {
  return this.setLogoutrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasLogoutrequest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional LogoutResponse logoutResponse = 7;
 * @return {?proto.serversdk.LogoutResponse}
 */
proto.serversdk.GamePkg.prototype.getLogoutresponse = function() {
  return /** @type{?proto.serversdk.LogoutResponse} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.LogoutResponse, 7));
};


/**
 * @param {?proto.serversdk.LogoutResponse|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setLogoutresponse = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearLogoutresponse = function() {
  return this.setLogoutresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasLogoutresponse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Notification notification = 8;
 * @return {?proto.serversdk.Notification}
 */
proto.serversdk.GamePkg.prototype.getNotification = function() {
  return /** @type{?proto.serversdk.Notification} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.Notification, 8));
};


/**
 * @param {?proto.serversdk.Notification|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setNotification = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearNotification = function() {
  return this.setNotification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasNotification = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional HeartbeatRequest heartbeatRequest = 9;
 * @return {?proto.serversdk.HeartbeatRequest}
 */
proto.serversdk.GamePkg.prototype.getHeartbeatrequest = function() {
  return /** @type{?proto.serversdk.HeartbeatRequest} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.HeartbeatRequest, 9));
};


/**
 * @param {?proto.serversdk.HeartbeatRequest|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setHeartbeatrequest = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearHeartbeatrequest = function() {
  return this.setHeartbeatrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasHeartbeatrequest = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional HeartbeatResponse heartbeatResponse = 10;
 * @return {?proto.serversdk.HeartbeatResponse}
 */
proto.serversdk.GamePkg.prototype.getHeartbeatresponse = function() {
  return /** @type{?proto.serversdk.HeartbeatResponse} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.HeartbeatResponse, 10));
};


/**
 * @param {?proto.serversdk.HeartbeatResponse|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setHeartbeatresponse = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearHeartbeatresponse = function() {
  return this.setHeartbeatresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasHeartbeatresponse = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SendToServer sendToServer = 11;
 * @return {?proto.serversdk.SendToServer}
 */
proto.serversdk.GamePkg.prototype.getSendtoserver = function() {
  return /** @type{?proto.serversdk.SendToServer} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.SendToServer, 11));
};


/**
 * @param {?proto.serversdk.SendToServer|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setSendtoserver = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearSendtoserver = function() {
  return this.setSendtoserver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasSendtoserver = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional SendToClient sendToClient = 12;
 * @return {?proto.serversdk.SendToClient}
 */
proto.serversdk.GamePkg.prototype.getSendtoclient = function() {
  return /** @type{?proto.serversdk.SendToClient} */ (
    jspb.Message.getWrapperField(this, proto.serversdk.SendToClient, 12));
};


/**
 * @param {?proto.serversdk.SendToClient|undefined} value
 * @return {!proto.serversdk.GamePkg} returns this
*/
proto.serversdk.GamePkg.prototype.setSendtoclient = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serversdk.GamePkg} returns this
 */
proto.serversdk.GamePkg.prototype.clearSendtoclient = function() {
  return this.setSendtoclient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serversdk.GamePkg.prototype.hasSendtoclient = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * @enum {number}
 */
proto.serversdk.HeadType = {
  LOGIN_REQUEST: 1,
  LOGIN_RESPONSE: 2,
  LOGOUT_REQUEST: 3,
  LOGOUT_RESPONSE: 4,
  NOTIFICATION: 5,
  HEARTBEAT_REQUEST: 6,
  HEARTBEAT_RESPONSE: 7,
  SEND_TO_SERVER: 8,
  SEND_TO_CLIENT: 9
};

goog.object.extend(exports, proto.serversdk);
